services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    volumes:
      - ./data/immich/upload:/usr/src/app/upload
      - ./data/immich/thumbs:/usr/src/app/upload/thumbs
      - ./data/immich/video:/usr/src/app/upload/encoded-video
      - ./data/immich/profile:/usr/src/app/upload/profile
      - /etc/localtime:/etc/localtime:ro
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 8088:2283
    depends_on:
      - redis
      - database
    environment:
      DB_DATABASE_NAME: ${DB_DATABASE_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    restart: unless-stopped
  #
  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}-openvino # for Intel OpenVINO support
    device_cgroup_rules:
      - c 189:* rmw
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ./data/immich/cache:/cache
      - /dev/bus/usb:/dev/bus/usb
    environment:
      DB_DATABASE_NAME: ${DB_DATABASE_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MACHINE_LEARNING_WORKERS: 1
    restart: unless-stopped
  #
  redis:
    container_name: immich_redis
    image: docker.io/bitnami/redis:7.0.11
    healthcheck:
      test: redis-cli ping || exit 1
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    restart: unless-stopped
  #
  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg15-v0.2.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: --data-checksums
    volumes:
      - ./data/immich/db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' ||
        exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}'
        --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT
        COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo
        "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command:
      - postgres
      - -c
      - shared_preload_libraries=vectors.so
      - -c
      - search_path="$$user", public, vectors
      - -c
      - logging_collector=on
      - -c
      - max_wal_size=2GB
      - -c
      - shared_buffers=512MB
      - -c
      - wal_compression=on
    restart: unless-stopped
